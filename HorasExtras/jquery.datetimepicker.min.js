var datetimepickerFactory = function (L) {
    "use strict";
    var s = {
        i18n: {
            en: {
                months: [
                    "January",
                    "February",
                    "March",
                    "April",
                    "May",
                    "June",
                    "July",
                    "August",
                    "September",
                    "October",
                    "November",
                    "December",
                ],
                dayOfWeekShort: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
                dayOfWeek: [
                    "Sunday",
                    "Monday",
                    "Tuesday",
                    "Wednesday",
                    "Thursday",
                    "Friday",
                    "Saturday",
                ],
            },
            es: {
                months: [
                    "Enero",
                    "Febrero",
                    "Marzo",
                    "Abril",
                    "Mayo",
                    "Junio",
                    "Julio",
                    "Agosto",
                    "Septiembre",
                    "Octubre",
                    "Noviembre",
                    "Diciembre",
                ],
                dayOfWeekShort: ["Dom", "Lun", "Mar", "Mié", "Jue", "Vie", "Sáb"],
                dayOfWeek: [
                    "Domingo",
                    "Lunes",
                    "Martes",
                    "Miércoles",
                    "Jueves",
                    "Viernes",
                    "Sábado",
                ],
            },
            "en-GB": {
                months: [
                    "January",
                    "February",
                    "March",
                    "April",
                    "May",
                    "June",
                    "July",
                    "August",
                    "September",
                    "October",
                    "November",
                    "December",
                ],
                dayOfWeekShort: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
                dayOfWeek: [
                    "Sunday",
                    "Monday",
                    "Tuesday",
                    "Wednesday",
                    "Thursday",
                    "Friday",
                    "Saturday",
                ],
            },
        },
        ownerDocument: document,
        contentWindow: window,
        value: "",
        rtl: !1,
        format: "Y/m/d H:i",
        formatTime: "H:i",
        formatDate: "Y/m/d",
        startDate: !1,
        step: 60,
        monthChangeSpinner: !0,
        closeOnDateSelect: !1,
        closeOnTimeSelect: !0,
        closeOnWithoutClick: !0,
        closeOnInputClick: !0,
        openOnFocus: !0,
        timepicker: !0,
        datepicker: !0,
        weeks: !1,
        defaultTime: !1,
        defaultDate: !1,
        minDate: !1,
        maxDate: !1,
        minTime: !1,
        maxTime: !1,
        minDateTime: !1,
        maxDateTime: !1,
        allowTimes: [],
        opened: !1,
        initTime: !0,
        inline: !1,
        theme: "",
        touchMovedThreshold: 5,
        onSelectDate: function () { },
        onSelectTime: function () { },
        onChangeMonth: function () { },
        onGetWeekOfYear: function () { },
        onChangeYear: function () { },
        onChangeDateTime: function () { },
        onShow: function () { },
        onClose: function () { },
        onGenerate: function () { },
        withoutCopyright: !0,
        inverseButton: !1,
        hours12: !1,
        next: "xdsoft_next",
        prev: "xdsoft_prev",
        dayOfWeekStart: 0,
        parentID: "body",
        timeHeightInTimePicker: 25,
        timepickerScrollbar: !0,
        todayButton: !0,
        prevButton: !0,
        nextButton: !0,
        defaultSelect: !0,
        scrollMonth: !0,
        scrollTime: !0,
        scrollInput: !0,
        lazyInit: !1,
        mask: !1,
        validateOnBlur: !0,
        allowBlank: !0,
        yearStart: 2023,
        yearEnd: 2040,
        monthStart: 0,
        monthEnd: 11,
        style: "",
        id: "",
        fixed: !1,
        roundTime: "round",
        className: "",
        weekends: [],
        highlightedDates: [],
        highlightedPeriods: [],
        allowDates: [],
        allowDateRe: null,
        disabledDates: [],
        disabledWeekDays: [],
        yearOffset: 0,
        beforeShowDay: null,
        enterLikeTab: !0,
        showApplyButton: !1,
        insideParent: !1,
    },
        E = null,
        o = null,
        V = "en",
        a = { meridiem: ["AM", "PM"] },
        r = function () {
            var e = s.i18n[V],
                t = {
                    days: e.dayOfWeek,
                    daysShort: e.dayOfWeekShort,
                    months: e.months,
                    monthsShort: L.map(e.months, function (e) {
                        return e.substring(0, 3);
                    }),
                };
            "function" == typeof DateFormatter &&
                (E = o = new DateFormatter({ dateSettings: L.extend({}, a, t) }));
        },
        n = {
            moment: {
                default_options: {
                    format: "YYYY/MM/DD HH:mm",
                    formatDate: "YYYY/MM/DD",
                    formatTime: "HH:mm",
                },
                formatter: {
                    parseDate: function (e, t) {
                        if (i(t)) return o.parseDate(e, t);
                        var a = moment(e, t);
                        return !!a.isValid() && a.toDate();
                    },
                    formatDate: function (e, t) {
                        return i(t) ? o.formatDate(e, t) : moment(e).format(t);
                    },
                    formatMask: function (e) {
                        return e
                            .replace(/Y{4}/g, "9999")
                            .replace(/Y{2}/g, "99")
                            .replace(/M{2}/g, "19")
                            .replace(/D{2}/g, "39")
                            .replace(/H{2}/g, "29")
                            .replace(/m{2}/g, "59")
                            .replace(/s{2}/g, "59");
                    },
                },
            },
        };
    L.datetimepicker = {
        setLocale: function (e) {
            var t = s.i18n[e] ? e : "en";
            V !== t && ((V = t), r());
        },
        setDateFormatter: function (e) {
            if ("string" == typeof e && n.hasOwnProperty(e)) {
                var t = n[e];
                L.extend(s, t.default_options), (E = t.formatter);
            } else E = e;
        },
    };
    var t = {
        RFC_2822: "D, d M Y H:i:s O",
        ATOM: "Y-m-dTH:i:sP",
        ISO_8601: "Y-m-dTH:i:sO",
        RFC_822: "D, d M y H:i:s O",
        RFC_850: "l, d-M-y H:i:s T",
        RFC_1036: "D, d M y H:i:s O",
        RFC_1123: "D, d M Y H:i:s O",
        RSS: "D, d M Y H:i:s O",
        W3C: "Y-m-dTH:i:sP",
    },
        i = function (e) {
            return -1 !== Object.values(t).indexOf(e);
        };
    function m(e, t, a) {
        (this.date = e), (this.desc = t), (this.style = a);
    }
    L.extend(L.datetimepicker, t),
        r(),
        window.getComputedStyle ||
        (window.getComputedStyle = function (a) {
            return (
                (this.el = a),
                (this.getPropertyValue = function (e) {
                    var t = /(-([a-z]))/g;
                    return (
                        "float" === e && (e = "styleFloat"),
                        t.test(e) &&
                        (e = e.replace(t, function (e, t, a) {
                            return a.toUpperCase();
                        })),
                        a.currentStyle[e] || null
                    );
                }),
                this
            );
        }),
        Array.prototype.indexOf ||
        (Array.prototype.indexOf = function (e, t) {
            var a, o;
            for (a = t || 0, o = this.length; a < o; a += 1)
                if (this[a] === e) return a;
            return -1;
        }),
        (Date.prototype.countDaysInMonth = function () {
            return new Date(this.getFullYear(), this.getMonth() + 1, 0).getDate();
        }),
        (L.fn.xdsoftScroller = function (D, y) {
            return this.each(function () {
                var n,
                    i,
                    s,
                    d,
                    u,
                    l = L(this),
                    a = function (e) {
                        var t,
                            a = { x: 0, y: 0 };
                        return (
                            "touchstart" === e.type ||
                                "touchmove" === e.type ||
                                "touchend" === e.type ||
                                "touchcancel" === e.type
                                ? ((t =
                                    e.originalEvent.touches[0] ||
                                    e.originalEvent.changedTouches[0]),
                                    (a.x = t.clientX),
                                    (a.y = t.clientY))
                                : ("mousedown" !== e.type &&
                                    "mouseup" !== e.type &&
                                    "mousemove" !== e.type &&
                                    "mouseover" !== e.type &&
                                    "mouseout" !== e.type &&
                                    "mouseenter" !== e.type &&
                                    "mouseleave" !== e.type) ||
                                ((a.x = e.clientX), (a.y = e.clientY)),
                            a
                        );
                    },
                    f = 0,
                    c = 100,
                    o = !1,
                    r = 0,
                    m = 0,
                    h = 0,
                    t = !1,
                    g = 0,
                    p = function () { };
                "hide" !== y
                    ? (L(this).hasClass("xdsoft_scroller_box") ||
                        ((n = l.children().eq(0)),
                            (f = Math.abs(parseInt(n.css("marginTop"), 10))),
                            (i = l[0].clientHeight),
                            (s = n[0].offsetHeight),
                            (d = L('<div class="xdsoft_scrollbar"></div>')),
                            (u = L('<div class="xdsoft_scroller"></div>')),
                            d.append(u),
                            l.addClass("xdsoft_scroller_box").append(d),
                            (p = function (e) {
                                var t = a(e).y - r + g;
                                t < 0 && (t = 0),
                                    t + u[0].offsetHeight > h && (t = h - u[0].offsetHeight),
                                    l.trigger("scroll_element.xdsoft_scroller", [c ? t / c : 0]);
                            }),
                            u
                                .on(
                                    "touchstart.xdsoft_scroller mousedown.xdsoft_scroller",
                                    function (e) {
                                        i || l.trigger("resize_scroll.xdsoft_scroller", [y]),
                                            (r = a(e).y),
                                            (g = parseInt(u.css("marginTop"), 10)),
                                            (h = d[0].offsetHeight),
                                            "mousedown" === e.type || "touchstart" === e.type
                                                ? (D.ownerDocument &&
                                                    L(D.ownerDocument.body).addClass("xdsoft_noselect"),
                                                    L([D.ownerDocument.body, D.contentWindow]).on(
                                                        "touchend mouseup.xdsoft_scroller",
                                                        function e() {
                                                            L([D.ownerDocument.body, D.contentWindow])
                                                                .off("touchend mouseup.xdsoft_scroller", e)
                                                                .off("mousemove.xdsoft_scroller", p)
                                                                .removeClass("xdsoft_noselect");
                                                        }
                                                    ),
                                                    L(D.ownerDocument.body).on(
                                                        "mousemove.xdsoft_scroller",
                                                        p
                                                    ))
                                                : ((t = !0), e.stopPropagation(), e.preventDefault());
                                    }
                                )
                                .on("touchmove", function (e) {
                                    t && (e.preventDefault(), p(e));
                                })
                                .on("touchend touchcancel", function () {
                                    (t = !1), (g = 0);
                                }),
                            l
                                .on("scroll_element.xdsoft_scroller", function (e, t) {
                                    i || l.trigger("resize_scroll.xdsoft_scroller", [t, !0]),
                                        (t = 1 < t ? 1 : t < 0 || isNaN(t) ? 0 : t),
                                        (f = parseFloat(
                                            Math.abs((n[0].offsetHeight - i) * t).toFixed(4)
                                        )),
                                        u.css("marginTop", c * t),
                                        n.css("marginTop", -f);
                                })
                                .on("resize_scroll.xdsoft_scroller", function (e, t, a) {
                                    var o, r;
                                    (i = l[0].clientHeight),
                                        (s = n[0].offsetHeight),
                                        (r = (o = i / s) * d[0].offsetHeight),
                                        1 < o
                                            ? u.hide()
                                            : (u.show(),
                                                u.css("height", parseInt(10 < r ? r : 10, 10)),
                                                (c = d[0].offsetHeight - u[0].offsetHeight),
                                                !0 !== a &&
                                                l.trigger("scroll_element.xdsoft_scroller", [
                                                    t || f / (s - i),
                                                ]));
                                }),
                            l.on("mousewheel", function (e) {
                                var t,
                                    a,
                                    o =
                                        ((t = e.originalEvent),
                                            (a = 0),
                                            "detail" in t && (a = t.detail),
                                            "wheelDelta" in t && (a = -t.wheelDelta / 120),
                                            "wheelDeltaY" in t && (a = -t.wheelDeltaY / 120),
                                            "axis" in t && t.axis === t.HORIZONTAL_AXIS && (a = 0),
                                            (a *= 10),
                                            "deltaY" in t && (a = -t.deltaY),
                                            a &&
                                            t.deltaMode &&
                                            (1 === t.deltaMode ? (a *= 40) : (a *= 800)),
                                            a),
                                    r = Math.max(0, f - o);
                                return (
                                    l.trigger("scroll_element.xdsoft_scroller", [r / (s - i)]),
                                    e.stopPropagation(),
                                    !1
                                );
                            }),
                            l.on("touchstart", function (e) {
                                (o = a(e)), (m = f);
                            }),
                            l.on("touchmove", function (e) {
                                if (o) {
                                    e.preventDefault();
                                    var t = a(e);
                                    l.trigger("scroll_element.xdsoft_scroller", [
                                        (m - (t.y - o.y)) / (s - i),
                                    ]);
                                }
                            }),
                            l.on("touchend touchcancel", function () {
                                (o = !1), (m = 0);
                            })),
                        l.trigger("resize_scroll.xdsoft_scroller", [y]))
                    : l.find(".xdsoft_scrollbar").hide();
            });
        }),
        (L.fn.datetimepicker = function (H, a) {
            var o,
                r,
                n = this,
                p = 17,
                D = 13,
                y = 27,
                k = 37,
                x = 38,
                v = 39,
                b = 40,
                T = 9,
                S = 116,
                O = 65,
                M = 67,
                j = 86,
                J = 90,
                z = 89,
                N = !1,
                I =
                    L.isPlainObject(H) || !H
                        ? L.extend(!0, {}, s, H)
                        : L.extend(!0, {}, s),
                i = 0;
            return (
                (o = function (w) {
                    var t,
                        o,
                        a,
                        r,
                        W,
                        h,
                        _ = L('<div class="xdsoft_datetimepicker xdsoft_noselect"></div>'),
                        e = L(
                            '<div class="xdsoft_copyright"><a target="_blank" href="http://xdsoft.net/jqplugins/datetimepicker/">xdsoft.net</a></div>'
                        ),
                        g = L('<div class="xdsoft_datepicker active"></div>'),
                        F = L(
                            '<div class="xdsoft_monthpicker"><button type="button" class="xdsoft_prev"></button><button type="button" class="xdsoft_today_button"></button><div class="xdsoft_label xdsoft_month"><span></span><i></i></div><div class="xdsoft_label xdsoft_year"><span></span><i></i></div><button type="button" class="xdsoft_next"></button></div>'
                        ),
                        C = L('<div class="xdsoft_calendar"></div>'),
                        n = L(
                            '<div class="xdsoft_timepicker active"><button type="button" class="xdsoft_prev"></button><div class="xdsoft_time_box"></div><button type="button" class="xdsoft_next"></button></div>'
                        ),
                        u = n.find(".xdsoft_time_box").eq(0),
                        P = L('<div class="xdsoft_time_variant"></div>'),
                        i = L(
                            '<button type="button" class="xdsoft_save_selected blue-gradient-button">Save Selected</button>'
                        ),
                        A = L(
                            '<div class="xdsoft_select xdsoft_monthselect"><div></div></div>'
                        ),
                        Y = L(
                            '<div class="xdsoft_select xdsoft_yearselect"><div></div></div>'
                        ),
                        s = !1,
                        d = 0;
                    I.id && _.attr("id", I.id),
                        I.style && _.attr("style", I.style),
                        I.weeks && _.addClass("xdsoft_showweeks"),
                        I.rtl && _.addClass("xdsoft_rtl"),
                        _.addClass("xdsoft_" + I.theme),
                        _.addClass(I.className),
                        F.find(".xdsoft_month span").after(A),
                        F.find(".xdsoft_year span").after(Y),
                        F.find(".xdsoft_month,.xdsoft_year").on(
                            "touchstart mousedown.xdsoft",
                            function (e) {
                                var t,
                                    a,
                                    o = L(this).find(".xdsoft_select").eq(0),
                                    r = 0,
                                    n = 0,
                                    i = o.is(":visible");
                                for (
                                    F.find(".xdsoft_select").hide(),
                                    W.currentTime &&
                                    (r =
                                        W.currentTime[
                                            L(this).hasClass("xdsoft_month")
                                                ? "getMonth"
                                                : "getFullYear"
                                        ]()),
                                    o[i ? "hide" : "show"](),
                                    t = o.find("div.xdsoft_option"),
                                    a = 0;
                                    a < t.length && t.eq(a).data("value") !== r;
                                    a += 1
                                )
                                    n += t[0].offsetHeight;
                                return (
                                    o.xdsoftScroller(
                                        I,
                                        n / (o.children()[0].offsetHeight - o[0].clientHeight)
                                    ),
                                    e.stopPropagation(),
                                    !1
                                );
                            }
                        );
                    var l = function (e) {
                        var t = e.originalEvent,
                            a = t.touches ? t.touches[0] : t;
                        this.touchStartPosition = this.touchStartPosition || a;
                        var o = Math.abs(this.touchStartPosition.clientX - a.clientX),
                            r = Math.abs(this.touchStartPosition.clientY - a.clientY);
                        Math.sqrt(o * o + r * r) > I.touchMovedThreshold &&
                            (this.touchMoved = !0);
                    };
                    function f() {
                        var e,
                            t = !1;
                        return (
                            I.startDate
                                ? (t = W.strToDate(I.startDate))
                                : (t = I.value || (w && w.val && w.val() ? w.val() : ""))
                                    ? ((t = W.strToDateTime(t)),
                                        I.yearOffset &&
                                        (t = new Date(
                                            t.getFullYear() - I.yearOffset,
                                            t.getMonth(),
                                            t.getDate(),
                                            t.getHours(),
                                            t.getMinutes(),
                                            t.getSeconds(),
                                            t.getMilliseconds()
                                        )))
                                    : I.defaultDate &&
                                    ((t = W.strToDateTime(I.defaultDate)),
                                        I.defaultTime &&
                                        ((e = W.strtotime(I.defaultTime)),
                                            t.setHours(e.getHours()),
                                            t.setMinutes(e.getMinutes()))),
                            t && W.isValidDate(t) ? _.data("changed", !0) : (t = ""),
                            t || 0
                        );
                    }
                    function c(m) {
                        var h = function (e, t) {
                            var a = e
                                .replace(/([\[\]\/\{\}\(\)\-\.\+]{1})/g, "\\$1")
                                .replace(/_/g, "{digit+}")
                                .replace(/([0-9]{1})/g, "{digit$1}")
                                .replace(/\{digit([0-9]{1})\}/g, "[0-$1_]{1}")
                                .replace(/\{digit[\+]\}/g, "[0-9_]{1}");
                            return new RegExp(a).test(t);
                        },
                            g = function (e, t) {
                                if (
                                    !(e =
                                        "string" == typeof e || e instanceof String
                                            ? m.ownerDocument.getElementById(e)
                                            : e)
                                )
                                    return !1;
                                if (e.createTextRange) {
                                    var a = e.createTextRange();
                                    return (
                                        a.collapse(!0),
                                        a.moveEnd("character", t),
                                        a.moveStart("character", t),
                                        a.select(),
                                        !0
                                    );
                                }
                                return !!e.setSelectionRange && (e.setSelectionRange(t, t), !0);
                            };
                        m.mask && w.off("keydown.xdsoft"),
                            !0 === m.mask &&
                            (E.formatMask
                                ? (m.mask = E.formatMask(m.format))
                                : (m.mask = m.format
                                    .replace(/Y/g, "9999")
                                    .replace(/F/g, "9999")
                                    .replace(/m/g, "19")
                                    .replace(/d/g, "39")
                                    .replace(/H/g, "29")
                                    .replace(/i/g, "59")
                                    .replace(/s/g, "59"))),
                            "string" === L.type(m.mask) &&
                            (h(m.mask, w.val()) ||
                                (w.val(m.mask.replace(/[0-9]/g, "_")), g(w[0], 0)),
                                w.on("paste.xdsoft", function (e) {
                                    var t = (
                                        e.clipboardData ||
                                        e.originalEvent.clipboardData ||
                                        window.clipboardData
                                    ).getData("text"),
                                        a = this.value,
                                        o = this.selectionStart;
                                    return (
                                        (a = a.substr(0, o) + t + a.substr(o + t.length)),
                                        (o += t.length),
                                        h(m.mask, a)
                                            ? ((this.value = a), g(this, o))
                                            : "" === L.trim(a)
                                                ? (this.value = m.mask.replace(/[0-9]/g, "_"))
                                                : w.trigger("error_input.xdsoft"),
                                        e.preventDefault(),
                                        !1
                                    );
                                }),
                                w.on("keydown.xdsoft", function (e) {
                                    var t,
                                        a = this.value,
                                        o = e.which,
                                        r = this.selectionStart,
                                        n = this.selectionEnd,
                                        i = r !== n;
                                    if (
                                        (48 <= o && o <= 57) ||
                                        (96 <= o && o <= 105) ||
                                        8 === o ||
                                        46 === o
                                    ) {
                                        for (
                                            t =
                                            8 === o || 46 === o
                                                ? "_"
                                                : String.fromCharCode(
                                                    96 <= o && o <= 105 ? o - 48 : o
                                                ),
                                            8 === o && r && !i && (r -= 1);
                                            ;

                                        ) {
                                            var s = m.mask.substr(r, 1),
                                                d = r < m.mask.length,
                                                u = 0 < r;
                                            if (!(/[^0-9_]/.test(s) && d && u)) break;
                                            r += 8 !== o || i ? 1 : -1;
                                        }
                                        if ((e.metaKey && (i = !(r = 0)), i)) {
                                            var l = n - r,
                                                f = m.mask.replace(/[0-9]/g, "_"),
                                                c = f.substr(r, l).substr(1);
                                            a = a.substr(0, r) + (t + c) + a.substr(r + l);
                                        } else {
                                            a = a.substr(0, r) + t + a.substr(r + 1);
                                        }
                                        if ("" === L.trim(a)) a = f;
                                        else if (r === m.mask.length) return e.preventDefault(), !1;
                                        for (
                                            r += 8 === o ? 0 : 1;
                                            /[^0-9_]/.test(m.mask.substr(r, 1)) &&
                                            r < m.mask.length &&
                                            0 < r;

                                        )
                                            r += 8 === o ? 0 : 1;
                                        h(m.mask, a)
                                            ? ((this.value = a), g(this, r))
                                            : "" === L.trim(a)
                                                ? (this.value = m.mask.replace(/[0-9]/g, "_"))
                                                : w.trigger("error_input.xdsoft");
                                    } else if ((-1 !== [O, M, j, J, z].indexOf(o) && N) || -1 !== [y, x, b, k, v, S, p, T, D].indexOf(o)) return !0;
                                    return e.preventDefault(), !1;
                                }));
                    }
                    F.find(".xdsoft_select")
                        .xdsoftScroller(I)
                        .on("touchstart mousedown.xdsoft", function (e) {
                            var t = e.originalEvent;
                            (this.touchMoved = !1),
                                (this.touchStartPosition = t.touches ? t.touches[0] : t),
                                e.stopPropagation(),
                                e.preventDefault();
                        })
                        .on("touchmove", ".xdsoft_option", l)
                        .on("touchend mousedown.xdsoft", ".xdsoft_option", function () {
                            if (!this.touchMoved) {
                                (void 0 !== W.currentTime && null !== W.currentTime) ||
                                    (W.currentTime = W.now());
                                var e = W.currentTime.getFullYear();
                                W &&
                                    W.currentTime &&
                                    W.currentTime[
                                        L(this).parent().parent().hasClass("xdsoft_monthselect")
                                            ? "setMonth"
                                            : "setFullYear"
                                    ](L(this).data("value")),
                                    L(this).parent().parent().hide(),
                                    _.trigger("xchange.xdsoft"),
                                    I.onChangeMonth &&
                                    L.isFunction(I.onChangeMonth) &&
                                    I.onChangeMonth.call(_, W.currentTime, _.data("input")),
                                    e !== W.currentTime.getFullYear() &&
                                    L.isFunction(I.onChangeYear) &&
                                    I.onChangeYear.call(_, W.currentTime, _.data("input"));
                            }
                        }),
                        (_.getValue = function () {
                            return W.getCurrentTime();
                        }),
                        (_.setOptions = function (e) {
                            var l = {};
                            (I = L.extend(!0, {}, I, e)),
                                e.allowTimes &&
                                L.isArray(e.allowTimes) &&
                                e.allowTimes.length &&
                                (I.allowTimes = L.extend(!0, [], e.allowTimes)),
                                e.weekends &&
                                L.isArray(e.weekends) &&
                                e.weekends.length &&
                                (I.weekends = L.extend(!0, [], e.weekends)),
                                e.allowDates &&
                                L.isArray(e.allowDates) &&
                                e.allowDates.length &&
                                (I.allowDates = L.extend(!0, [], e.allowDates)),
                                e.allowDateRe &&
                                "[object String]" ===
                                Object.prototype.toString.call(e.allowDateRe) &&
                                (I.allowDateRe = new RegExp(e.allowDateRe)),
                                e.highlightedDates &&
                                L.isArray(e.highlightedDates) &&
                                e.highlightedDates.length &&
                                (L.each(e.highlightedDates, function (e, t) {
                                    var a,
                                        o = L.map(t.split(","), L.trim),
                                        r = new m(E.parseDate(o[0], I.formatDate), o[1], o[2]),
                                        n = E.formatDate(r.date, I.formatDate);
                                    void 0 !== l[n]
                                        ? (a = l[n].desc) &&
                                        a.length &&
                                        r.desc &&
                                        r.desc.length &&
                                        (l[n].desc = a + "\n" + r.desc)
                                        : (l[n] = r);
                                }),
                                    (I.highlightedDates = L.extend(!0, [], l))),
                                e.highlightedPeriods &&
                                L.isArray(e.highlightedPeriods) &&
                                e.highlightedPeriods.length &&
                                ((l = L.extend(!0, [], I.highlightedDates)),
                                    L.each(e.highlightedPeriods, function (e, t) {
                                        var a, o, r, n, i, s, d;
                                        if (L.isArray(t))
                                            (a = t[0]), (o = t[1]), (r = t[2]), (d = t[3]);
                                        else {
                                            var u = L.map(t.split(","), L.trim);
                                            (a = E.parseDate(u[0], I.formatDate)),
                                                (o = E.parseDate(u[1], I.formatDate)),
                                                (r = u[2]),
                                                (d = u[3]);
                                        }
                                        for (; a <= o;)
                                            (n = new m(a, r, d)),
                                                (i = E.formatDate(a, I.formatDate)),
                                                a.setDate(a.getDate() + 1),
                                                void 0 !== l[i]
                                                    ? (s = l[i].desc) &&
                                                    s.length &&
                                                    n.desc &&
                                                    n.desc.length &&
                                                    (l[i].desc = s + "\n" + n.desc)
                                                    : (l[i] = n);
                                    }),
                                    (I.highlightedDates = L.extend(!0, [], l))),
                                e.disabledDates &&
                                L.isArray(e.disabledDates) &&
                                e.disabledDates.length &&
                                (I.disabledDates = L.extend(!0, [], e.disabledDates)),
                                e.disabledWeekDays &&
                                L.isArray(e.disabledWeekDays) &&
                                e.disabledWeekDays.length &&
                                (I.disabledWeekDays = L.extend(!0, [], e.disabledWeekDays)),
                                (!I.open && !I.opened) || I.inline || w.trigger("open.xdsoft"),
                                I.inline &&
                                ((s = !0), _.addClass("xdsoft_inline"), w.after(_).hide()),
                                I.inverseButton &&
                                ((I.next = "xdsoft_prev"), (I.prev = "xdsoft_next")),
                                I.datepicker ? g.addClass("active") : g.removeClass("active"),
                                I.timepicker ? n.addClass("active") : n.removeClass("active"),
                                I.value &&
                                (W.setCurrentTime(I.value), w && w.val && w.val(W.str)),
                                isNaN(I.dayOfWeekStart)
                                    ? (I.dayOfWeekStart = 0)
                                    : (I.dayOfWeekStart = parseInt(I.dayOfWeekStart, 10) % 7),
                                I.timepickerScrollbar || u.xdsoftScroller(I, "hide"),
                                I.minDate &&
                                /^[\+\-](.*)$/.test(I.minDate) &&
                                (I.minDate = E.formatDate(
                                    W.strToDateTime(I.minDate),
                                    I.formatDate
                                )),
                                I.maxDate &&
                                /^[\+\-](.*)$/.test(I.maxDate) &&
                                (I.maxDate = E.formatDate(
                                    W.strToDateTime(I.maxDate),
                                    I.formatDate
                                )),
                                I.minDateTime &&
                                /^\+(.*)$/.test(I.minDateTime) &&
                                (I.minDateTime = W.strToDateTime(I.minDateTime).dateFormat(
                                    I.formatDate
                                )),
                                I.maxDateTime &&
                                /^\+(.*)$/.test(I.maxDateTime) &&
                                (I.maxDateTime = W.strToDateTime(I.maxDateTime).dateFormat(
                                    I.formatDate
                                )),
                                i.toggle(I.showApplyButton),
                                F.find(".xdsoft_today_button").css(
                                    "visibility",
                                    I.todayButton ? "visible" : "hidden"
                                ),
                                F.find("." + I.prev).css(
                                    "visibility",
                                    I.prevButton ? "visible" : "hidden"
                                ),
                                F.find("." + I.next).css(
                                    "visibility",
                                    I.nextButton ? "visible" : "hidden"
                                ),
                                c(I),
                                I.validateOnBlur &&
                                w.off("blur.xdsoft").on("blur.xdsoft", function () {
                                    if (
                                        I.allowBlank &&
                                        (!L.trim(L(this).val()).length ||
                                            ("string" == typeof I.mask &&
                                                L.trim(L(this).val()) ===
                                                I.mask.replace(/[0-9]/g, "_")))
                                    )
                                        L(this).val(null), _.data("xdsoft_datetime").empty();
                                    else {
                                        var e = E.parseDate(L(this).val(), I.format);
                                        if (e) L(this).val(E.formatDate(e, I.format));
                                        else {
                                            var t = +[L(this).val()[0], L(this).val()[1]].join(""),
                                                a = +[L(this).val()[2], L(this).val()[3]].join("");
                                            !I.datepicker &&
                                                I.timepicker &&
                                                0 <= t &&
                                                t < 24 &&
                                                0 <= a &&
                                                a < 60
                                                ? L(this).val(
                                                    [t, a]
                                                        .map(function (e) {
                                                            return 9 < e ? e : "0" + e;
                                                        })
                                                        .join(":")
                                                )
                                                : L(this).val(E.formatDate(W.now(), I.format));
                                        }
                                        _.data("xdsoft_datetime").setCurrentTime(L(this).val());
                                    }
                                    _.trigger("changedatetime.xdsoft"),
                                        _.trigger("close.xdsoft");
                                }),
                                (I.dayOfWeekStartPrev =
                                    0 === I.dayOfWeekStart ? 6 : I.dayOfWeekStart - 1),
                                _.trigger("xchange.xdsoft").trigger("afterOpen.xdsoft");
                        }),
                        _.data("options", I).on(
                            "touchstart mousedown.xdsoft",
                            function (e) {
                                return (
                                    e.stopPropagation(),
                                    e.preventDefault(),
                                    Y.hide(),
                                    A.hide(),
                                    !1
                                );
                            }
                        ),
                        u.append(P),
                        u.xdsoftScroller(I),
                        _.on("afterOpen.xdsoft", function () {
                            u.xdsoftScroller(I);
                        }),
                        _.append(g).append(n),
                        !0 !== I.withoutCopyright && _.append(e),
                        g.append(F).append(C).append(i),
                        I.insideParent ? L(w).parent().append(_) : L(I.parentID).append(_),
                        (W = new (function () {
                            var r = this;
                            (r.now = function (e) {
                                var t,
                                    a,
                                    o = new Date();
                                return (
                                    !e &&
                                    I.defaultDate &&
                                    ((t = r.strToDateTime(I.defaultDate)),
                                        o.setFullYear(t.getFullYear()),
                                        o.setMonth(t.getMonth()),
                                        o.setDate(t.getDate())),
                                    o.setFullYear(o.getFullYear()),
                                    !e &&
                                    I.defaultTime &&
                                    ((a = r.strtotime(I.defaultTime)),
                                        o.setHours(a.getHours()),
                                        o.setMinutes(a.getMinutes()),
                                        o.setSeconds(a.getSeconds()),
                                        o.setMilliseconds(a.getMilliseconds())),
                                    o
                                );
                            }),
                                (r.isValidDate = function (e) {
                                    return (
                                        "[object Date]" === Object.prototype.toString.call(e) &&
                                        !isNaN(e.getTime())
                                    );
                                }),
                                (r.setCurrentTime = function (e, t) {
                                    "string" == typeof e
                                        ? (r.currentTime = r.strToDateTime(e))
                                        : r.isValidDate(e)
                                            ? (r.currentTime = e)
                                            : e || t || !I.allowBlank || I.inline
                                                ? (r.currentTime = r.now())
                                                : (r.currentTime = null),
                                        _.trigger("xchange.xdsoft");
                                }),
                                (r.empty = function () {
                                    r.currentTime = null;
                                }),
                                (r.getCurrentTime = function () {
                                    return r.currentTime;
                                }),
                                (r.nextMonth = function () {
                                    (void 0 !== r.currentTime && null !== r.currentTime) ||
                                        (r.currentTime = r.now());
                                    var e,
                                        t = r.currentTime.getMonth() + 1;
                                    return (
                                        12 === t &&
                                        (r.currentTime.setFullYear(
                                            r.currentTime.getFullYear() + 1
                                        ),
                                            (t = 0)),
                                        (e = r.currentTime.getFullYear()),
                                        r.currentTime.setDate(
                                            Math.min(
                                                new Date(
                                                    r.currentTime.getFullYear(),
                                                    t + 1,
                                                    0
                                                ).getDate(),
                                                r.currentTime.getDate()
                                            )
                                        ),
                                        r.currentTime.setMonth(t),
                                        I.onChangeMonth &&
                                        L.isFunction(I.onChangeMonth) &&
                                        I.onChangeMonth.call(_, W.currentTime, _.data("input")),
                                        e !== r.currentTime.getFullYear() &&
                                        L.isFunction(I.onChangeYear) &&
                                        I.onChangeYear.call(_, W.currentTime, _.data("input")),
                                        _.trigger("xchange.xdsoft"),
                                        t
                                    );
                                }),
                                (r.prevMonth = function () {
                                    (void 0 !== r.currentTime && null !== r.currentTime) ||
                                        (r.currentTime = r.now());
                                    var e = r.currentTime.getMonth() - 1;
                                    return (
                                        -1 === e &&
                                        (r.currentTime.setFullYear(
                                            r.currentTime.getFullYear() - 1
                                        ),
                                            (e = 11)),
                                        r.currentTime.setDate(
                                            Math.min(
                                                new Date(
                                                    r.currentTime.getFullYear(),
                                                    e + 1,
                                                    0
                                                ).getDate(),
                                                r.currentTime.getDate()
                                            )
                                        ),
                                        r.currentTime.setMonth(e),
                                        I.onChangeMonth &&
                                        L.isFunction(I.onChangeMonth) &&
                                        I.onChangeMonth.call(_, W.currentTime, _.data("input")),
                                        _.trigger("xchange.xdsoft"),
                                        e
                                    );
                                }),
                                (r.getWeekOfYear = function (e) {
                                    if (I.onGetWeekOfYear && L.isFunction(I.onGetWeekOfYear)) {
                                        var t = I.onGetWeekOfYear.call(_, e);
                                        if (void 0 !== t) return t;
                                    }
                                    var a = new Date(e.getFullYear(), 0, 1);
                                    return (
                                        4 !== a.getDay() &&
                                        a.setMonth(0, 1 + ((4 - a.getDay() + 7) % 7)),
                                        Math.ceil(((e - a) / 864e5 + a.getDay() + 1) / 7)
                                    );
                                }),
                                (r.strToDateTime = function (e) {
                                    var t,
                                        a,
                                        o = [];
                                    return e && e instanceof Date && r.isValidDate(e)
                                        ? e
                                        : ((o = /^([+-]{1})(.*)$/.exec(e)) &&
                                            (o[2] = E.parseDate(o[2], I.formatDate)),
                                            (a =
                                                o && o[2]
                                                    ? ((t =
                                                        o[2].getTime() - 6e4 * o[2].getTimezoneOffset()),
                                                        new Date(
                                                            r.now(!0).getTime() + parseInt(o[1] + "1", 10) * t
                                                        ))
                                                    : e
                                                        ? E.parseDate(e, I.format)
                                                        : r.now()),
                                            r.isValidDate(a) || (a = r.now()),
                                            a);
                                }),
                                (r.strToDate = function (e) {
                                    if (e && e instanceof Date && r.isValidDate(e)) return e;
                                    var t = e ? E.parseDate(e, I.formatDate) : r.now(!0);
                                    return r.isValidDate(t) || (t = r.now(!0)), t;
                                }),
                                (r.strtotime = function (e) {
                                    if (e && e instanceof Date && r.isValidDate(e)) return e;
                                    var t = e ? E.parseDate(e, I.formatTime) : r.now(!0);
                                    return r.isValidDate(t) || (t = r.now(!0)), t;
                                }),
                                (r.str = function () {
                                    var e = I.format;
                                    return (
                                        I.yearOffset &&
                                        (e = (e = e.replace(
                                            "Y",
                                            r.currentTime.getFullYear() + I.yearOffset
                                        )).replace(
                                            "y",
                                            String(
                                                r.currentTime.getFullYear() + I.yearOffset
                                            ).substring(2, 4)
                                        )),
                                        E.formatDate(r.currentTime, e)
                                    );
                                }),
                                (r.currentTime = this.now());
                        })()),
                        i.on("touchend click", function (e) {
                            e.preventDefault(),
                                _.data("changed", !0),
                                W.setCurrentTime(f()),
                                w.val(W.str()),
                                _.trigger("close.xdsoft");
                        }),
                        F.find(".xdsoft_today_button")
                            .on("touchend mousedown.xdsoft", function () {
                                _.data("changed", !0),
                                    W.setCurrentTime(0, !0),
                                    _.trigger("afterOpen.xdsoft");
                            })
                            .on("dblclick.xdsoft", function () {
                                var e,
                                    t,
                                    a = W.getCurrentTime();
                                (a = new Date(a.getFullYear(), a.getMonth(), a.getDate())),
                                    (e = W.strToDate(I.minDate)),
                                    a <
                                    (e = new Date(
                                        e.getFullYear(),
                                        e.getMonth(),
                                        e.getDate()
                                    )) ||
                                    ((t = W.strToDate(I.maxDate)),
                                        (t = new Date(t.getFullYear(), t.getMonth(), t.getDate())) <
                                        a ||
                                        (w.val(W.str()),
                                            w.trigger("change"),
                                            _.trigger("close.xdsoft")));
                            }),
                        F.find(".xdsoft_prev,.xdsoft_next").on(
                            "touchend mousedown.xdsoft",
                            function () {
                                var a = L(this),
                                    o = 0,
                                    r = !1;
                                !(function e(t) {
                                    a.hasClass(I.next)
                                        ? W.nextMonth()
                                        : a.hasClass(I.prev) && W.prevMonth(),
                                        I.monthChangeSpinner &&
                                        (r || (o = setTimeout(e, t || 100)));
                                })(500),
                                    L([I.ownerDocument.body, I.contentWindow]).on(
                                        "touchend mouseup.xdsoft",
                                        function e() {
                                            clearTimeout(o),
                                                (r = !0),
                                                L([I.ownerDocument.body, I.contentWindow]).off(
                                                    "touchend mouseup.xdsoft",
                                                    e
                                                );
                                        }
                                    );
                            }
                        ),
                        n
                            .find(".xdsoft_prev,.xdsoft_next")
                            .on("touchend mousedown.xdsoft", function () {
                                var n = L(this),
                                    i = 0,
                                    s = !1,
                                    d = 110;
                                !(function e(t) {
                                    var a = u[0].clientHeight,
                                        o = P[0].offsetHeight,
                                        r = Math.abs(parseInt(P.css("marginTop"), 10));
                                    r < I.timeHeightInTimePicker
                                        ? (r = I.timeHeightInTimePicker)
                                        : n.hasClass(I.next) &&
                                        o - a < r &&
                                        P.css("marginTop", "-" + o + "px"),
                                        n.hasClass(I.next) && r < o - a
                                            ? P.css(
                                                "marginTop",
                                                "-" + (r + I.timeHeightInTimePicker) + "px"
                                            )
                                            : n.hasClass(I.prev) &&
                                            0 <= r - I.timeHeightInTimePicker &&
                                            P.css(
                                                "marginTop",
                                                "-" + (r - I.timeHeightInTimePicker) + "px"
                                            ),
                                        u.trigger("scroll_element.xdsoft_scroller", [
                                            Math.abs(parseInt(P[0].style.marginTop, 10) / (o - a)),
                                        ]),
                                        (d = 10 < d ? 10 : d - 10),
                                        s || (i = setTimeout(e, t || d));
                                })(500),
                                    L([I.ownerDocument.body, I.contentWindow]).on(
                                        "touchend mouseup.xdsoft",
                                        function e() {
                                            clearTimeout(i),
                                                (s = !0),
                                                L([I.ownerDocument.body, I.contentWindow]).off(
                                                    "touchend mouseup.xdsoft",
                                                    e
                                                );
                                        }
                                    );
                            }),
                        (t = 0),
                        _.on("xchange.xdsoft", function (e) {
                            clearTimeout(t),
                                (t = setTimeout(function () {
                                    (void 0 === W.currentTime ||
                                        null === W.currentTime ||
                                        isNaN(W.currentTime.getTime())) &&
                                        (W.currentTime = W.now());
                                    for (
                                        var e,
                                        t,
                                        a,
                                        o,
                                        r,
                                        n,
                                        i,
                                        s,
                                        d,
                                        u,
                                        l = "",
                                        f = new Date(
                                            W.currentTime.getFullYear(),
                                            W.currentTime.getMonth(),
                                            1,
                                            12,
                                            0,
                                            0
                                        ),
                                        c = 0,
                                        m = W.now(),
                                        h = !1,
                                        g = !1,
                                        p = !1,
                                        D = !1,
                                        y = [],
                                        k = !0,
                                        x = "";
                                        f.getDay() !== I.dayOfWeekStart;

                                    )
                                        f.setDate(f.getDate() - 1);
                                    for (
                                        l += "<table><thead><tr>",
                                        I.weeks && (l += "<th></th>"),
                                        e = 0;
                                        e < 7;
                                        e += 1
                                    )
                                        l +=
                                            "<th>" +
                                            I.i18n[V].dayOfWeekShort[(e + I.dayOfWeekStart) % 7] +
                                            "</th>";
                                    for (
                                        l += "</tr></thead>",
                                        l += "<tbody>",
                                        !1 !== I.maxDate &&
                                        ((h = W.strToDate(I.maxDate)),
                                            (h = new Date(
                                                h.getFullYear(),
                                                h.getMonth(),
                                                h.getDate(),
                                                23,
                                                59,
                                                59,
                                                999
                                            ))),
                                        !1 !== I.minDate &&
                                        ((g = W.strToDate(I.minDate)),
                                            (g = new Date(
                                                g.getFullYear(),
                                                g.getMonth(),
                                                g.getDate()
                                            ))),
                                        !1 !== I.minDateTime &&
                                        ((p = W.strToDate(I.minDateTime)),
                                            (p = new Date(
                                                p.getFullYear(),
                                                p.getMonth(),
                                                p.getDate(),
                                                p.getHours(),
                                                p.getMinutes(),
                                                p.getSeconds()
                                            ))),
                                        !1 !== I.maxDateTime &&
                                        ((D = W.strToDate(I.maxDateTime)),
                                            (D = new Date(
                                                D.getFullYear(),
                                                D.getMonth(),
                                                D.getDate(),
                                                D.getHours(),
                                                D.getMinutes(),
                                                D.getSeconds()
                                            ))),
                                        !1 !== D &&
                                        (u =
                                            31 * (12 * D.getFullYear() + D.getMonth()) +
                                            D.getDate());
                                        c < W.currentTime.countDaysInMonth() ||
                                        f.getDay() !== I.dayOfWeekStart ||
                                        W.currentTime.getMonth() === f.getMonth();

                                    ) {
                                        (y = []),
                                            (c += 1),
                                            (a = f.getDay()),
                                            (o = f.getDate()),
                                            (r = f.getFullYear()),
                                            (O = f.getMonth()),
                                            (n = W.getWeekOfYear(f)),
                                            (d = ""),
                                            y.push("xdsoft_date"),
                                            (i =
                                                I.beforeShowDay && L.isFunction(I.beforeShowDay.call)
                                                    ? I.beforeShowDay.call(_, f)
                                                    : null),
                                            I.allowDateRe &&
                                            "[object RegExp]" ===
                                            Object.prototype.toString.call(I.allowDateRe) &&
                                            (I.allowDateRe.test(E.formatDate(f, I.formatDate)) ||
                                                y.push("xdsoft_disabled")),
                                            I.allowDates &&
                                            0 < I.allowDates.length &&
                                            -1 ===
                                            I.allowDates.indexOf(E.formatDate(f, I.formatDate)) &&
                                            y.push("xdsoft_disabled");
                                        var v =
                                            31 * (12 * f.getFullYear() + f.getMonth()) + f.getDate();
                                        ((!1 !== h && h < f) ||
                                            (!1 !== p && f < p) ||
                                            (!1 !== g && f < g) ||
                                            (!1 !== D && u < v) ||
                                            (i && !1 === i[0])) &&
                                            y.push("xdsoft_disabled"),
                                            -1 !==
                                            I.disabledDates.indexOf(
                                                E.formatDate(f, I.formatDate)
                                            ) && y.push("xdsoft_disabled"),
                                            -1 !== I.disabledWeekDays.indexOf(a) &&
                                            y.push("xdsoft_disabled"),
                                            w.is("[disabled]") && y.push("xdsoft_disabled"),
                                            i && "" !== i[1] && y.push(i[1]),
                                            W.currentTime.getMonth() !== O &&
                                            y.push("xdsoft_other_month"),
                                            (I.defaultSelect || _.data("changed")) &&
                                            E.formatDate(W.currentTime, I.formatDate) ===
                                            E.formatDate(f, I.formatDate) &&
                                            y.push("xdsoft_current"),
                                            E.formatDate(m, I.formatDate) ===
                                            E.formatDate(f, I.formatDate) && y.push("xdsoft_today"),
                                            (0 !== f.getDay() &&
                                                6 !== f.getDay() &&
                                                -1 ===
                                                I.weekends.indexOf(E.formatDate(f, I.formatDate))) ||
                                            y.push("xdsoft_weekend"),
                                            void 0 !==
                                            I.highlightedDates[E.formatDate(f, I.formatDate)] &&
                                            ((t =
                                                I.highlightedDates[E.formatDate(f, I.formatDate)]),
                                                y.push(
                                                    void 0 === t.style
                                                        ? "xdsoft_highlighted_default"
                                                        : t.style
                                                ),
                                                (d = void 0 === t.desc ? "" : t.desc)),
                                            I.beforeShowDay &&
                                            L.isFunction(I.beforeShowDay) &&
                                            y.push(I.beforeShowDay(f)),
                                            k &&
                                            ((l += "<tr>"),
                                                (k = !1),
                                                I.weeks && (l += "<th>" + n + "</th>")),
                                            (l +=
                                                '<td data-date="' +
                                                o +
                                                '" data-month="' +
                                                O +
                                                '" data-year="' +
                                                r +
                                                '" class="xdsoft_date xdsoft_day_of_week' +
                                                f.getDay() +
                                                " " +
                                                y.join(" ") +
                                                '" title="' +
                                                d +
                                                '"><div>' +
                                                o +
                                                "</div></td>"),
                                            f.getDay() === I.dayOfWeekStartPrev &&
                                            ((l += "</tr>"), (k = !0)),
                                            f.setDate(o + 1);
                                    }
                                    (l += "</tbody></table>"),
                                        C.html(l),
                                        F.find(".xdsoft_label span")
                                            .eq(0)
                                            .text(I.i18n[V].months[W.currentTime.getMonth()]),
                                        F.find(".xdsoft_label span")
                                            .eq(1)
                                            .text(W.currentTime.getFullYear() + I.yearOffset),
                                        (O = x = "");
                                    var b = 0;
                                    if (!1 !== I.minTime) {
                                        var T = W.strtotime(I.minTime);
                                        b = 60 * T.getHours() + T.getMinutes();
                                    }
                                    var S = 1440;
                                    if (!1 !== I.maxTime) {
                                        T = W.strtotime(I.maxTime);
                                        S = 60 * T.getHours() + T.getMinutes();
                                    }
                                    if (!1 !== I.minDateTime) {
                                        T = W.strToDateTime(I.minDateTime);
                                        if (
                                            E.formatDate(W.currentTime, I.formatDate) ===
                                            E.formatDate(T, I.formatDate)
                                        ) {
                                            var O = 60 * T.getHours() + T.getMinutes();
                                            b < O && (b = O);
                                        }
                                    }
                                    if (!1 !== I.maxDateTime) {
                                        T = W.strToDateTime(I.maxDateTime);
                                        if (
                                            E.formatDate(W.currentTime, I.formatDate) ===
                                            E.formatDate(T, I.formatDate)
                                        )
                                            (O = 60 * T.getHours() + T.getMinutes()) < S && (S = O);
                                    }
                                    if (
                                        ((s = function (e, t) {
                                            var a,
                                                o = W.now(),
                                                r =
                                                    I.allowTimes &&
                                                    L.isArray(I.allowTimes) &&
                                                    I.allowTimes.length;
                                            o.setHours(e),
                                                (e = parseInt(o.getHours(), 10)),
                                                o.setMinutes(t),
                                                (t = parseInt(o.getMinutes(), 10)),
                                                (y = []);
                                            var n = 60 * e + t;
                                            (w.is("[disabled]") || S <= n || n < b) &&
                                                y.push("xdsoft_disabled"),
                                                (a = new Date(W.currentTime)).setHours(
                                                    parseInt(W.currentTime.getHours(), 10)
                                                ),
                                                r ||
                                                a.setMinutes(
                                                    Math[I.roundTime](
                                                        W.currentTime.getMinutes() / I.step
                                                    ) * I.step
                                                ),
                                                (I.initTime || I.defaultSelect || _.data("changed")) &&
                                                a.getHours() === parseInt(e, 10) &&
                                                ((!r && 59 < I.step) ||
                                                    a.getMinutes() === parseInt(t, 10)) &&
                                                (I.defaultSelect || _.data("changed")
                                                    ? y.push("xdsoft_current")
                                                    : I.initTime && y.push("xdsoft_init_time")),
                                                parseInt(m.getHours(), 10) === parseInt(e, 10) &&
                                                parseInt(m.getMinutes(), 10) === parseInt(t, 10) &&
                                                y.push("xdsoft_today"),
                                                (x +=
                                                    '<div class="xdsoft_time ' +
                                                    y.join(" ") +
                                                    '" data-hour="' +
                                                    e +
                                                    '" data-minute="' +
                                                    t +
                                                    '">' +
                                                    E.formatDate(o, I.formatTime) +
                                                    "</div>");
                                        }),
                                            I.allowTimes &&
                                            L.isArray(I.allowTimes) &&
                                            I.allowTimes.length)
                                    )
                                        for (c = 0; c < I.allowTimes.length; c += 1)
                                            s(
                                                W.strtotime(I.allowTimes[c]).getHours(),
                                                (O = W.strtotime(I.allowTimes[c]).getMinutes())
                                            );
                                    else
                                        for (e = c = 0; c < (I.hours12 ? 12 : 24); c += 1)
                                            for (e = 0; e < 60; e += I.step) {
                                                var M = 60 * c + e;
                                                M < b ||
                                                    S <= M ||
                                                    s(
                                                        (c < 10 ? "0" : "") + c,
                                                        (O = (e < 10 ? "0" : "") + e)
                                                    );
                                            }
                                    for (
                                        P.html(x), H = "", c = parseInt(I.yearStart, 10);
                                        c <= parseInt(I.yearEnd, 10);
                                        c += 1
                                    )
                                        H +=
                                            '<div class="xdsoft_option ' +
                                            (W.currentTime.getFullYear() === c
                                                ? "xdsoft_current"
                                                : "") +
                                            '" data-value="' +
                                            c +
                                            '">' +
                                            (c + I.yearOffset) +
                                            "</div>";
                                    for (
                                        Y.children().eq(0).html(H),
                                        c = parseInt(I.monthStart, 10),
                                        H = "";
                                        c <= parseInt(I.monthEnd, 10);
                                        c += 1
                                    )
                                        H +=
                                            '<div class="xdsoft_option ' +
                                            (W.currentTime.getMonth() === c ? "xdsoft_current" : "") +
                                            '" data-value="' +
                                            c +
                                            '">' +
                                            I.i18n[V].months[c] +
                                            "</div>";
                                    A.children().eq(0).html(H), L(_).trigger("generate.xdsoft");
                                }, 10)),
                                e.stopPropagation();
                        }).on("afterOpen.xdsoft", function () {
                            var e, t, a, o;
                            I.timepicker &&
                                (P.find(".xdsoft_current").length
                                    ? (e = ".xdsoft_current")
                                    : P.find(".xdsoft_init_time").length &&
                                    (e = ".xdsoft_init_time"),
                                    e
                                        ? ((t = u[0].clientHeight),
                                            (a = P[0].offsetHeight) - t <
                                            (o = P.find(e).index() * I.timeHeightInTimePicker + 1) &&
                                            (o = a - t),
                                            u.trigger("scroll_element.xdsoft_scroller", [
                                                parseInt(o, 10) / (a - t),
                                            ]))
                                        : u.trigger("scroll_element.xdsoft_scroller", [0]));
                        }),
                        (o = 0),
                        C.on("touchend click.xdsoft", "td", function (e) {
                            e.stopPropagation(), (o += 1);
                            var t = L(this),
                                a = W.currentTime;
                            if (
                                (null == a && ((W.currentTime = W.now()), (a = W.currentTime)),
                                    t.hasClass("xdsoft_disabled"))
                            )
                                return !1;
                            a.setDate(1),
                                a.setFullYear(t.data("year")),
                                a.setMonth(t.data("month")),
                                a.setDate(t.data("date")),
                                _.trigger("select.xdsoft", [a]),
                                w.val(W.str()),
                                I.onSelectDate &&
                                L.isFunction(I.onSelectDate) &&
                                I.onSelectDate.call(_, W.currentTime, _.data("input"), e),
                                _.data("changed", !0),
                                _.trigger("xchange.xdsoft"),
                                _.trigger("changedatetime.xdsoft"),
                                (1 < o ||
                                    !0 === I.closeOnDateSelect ||
                                    (!1 === I.closeOnDateSelect && !I.timepicker)) &&
                                !I.inline &&
                                _.trigger("close.xdsoft"),
                                setTimeout(function () {
                                    o = 0;
                                }, 200);
                        }),
                        P.on("touchstart", "div", function (e) {
                            this.touchMoved = !1;
                        })
                            .on("touchmove", "div", l)
                            .on("touchend click.xdsoft", "div", function (e) {
                                if (!this.touchMoved) {
                                    e.stopPropagation();
                                    var t = L(this),
                                        a = W.currentTime;
                                    if (
                                        (null == a &&
                                            ((W.currentTime = W.now()), (a = W.currentTime)),
                                            t.hasClass("xdsoft_disabled"))
                                    )
                                        return !1;
                                    a.setHours(t.data("hour")),
                                        a.setMinutes(t.data("minute")),
                                        _.trigger("select.xdsoft", [a]),
                                        _.data("input").val(W.str()),
                                        I.onSelectTime &&
                                        L.isFunction(I.onSelectTime) &&
                                        I.onSelectTime.call(_, W.currentTime, _.data("input"), e),
                                        _.data("changed", !0),
                                        _.trigger("xchange.xdsoft"),
                                        _.trigger("changedatetime.xdsoft"),
                                        !0 !== I.inline &&
                                        !0 === I.closeOnTimeSelect &&
                                        _.trigger("close.xdsoft");
                                }
                            }),
                        g.on("mousewheel.xdsoft", function (e) {
                            return (
                                !I.scrollMonth ||
                                (e.deltaY < 0 ? W.nextMonth() : W.prevMonth(), !1)
                            );
                        }),
                        w.on("mousewheel.xdsoft", function (e) {
                            return (
                                !I.scrollInput ||
                                (!I.datepicker && I.timepicker
                                    ? (0 <=
                                        (a = P.find(".xdsoft_current").length
                                            ? P.find(".xdsoft_current").eq(0).index()
                                            : 0) +
                                        e.deltaY &&
                                        a + e.deltaY < P.children().length &&
                                        (a += e.deltaY),
                                        P.children().eq(a).length &&
                                        P.children().eq(a).trigger("mousedown"),
                                        !1)
                                    : I.datepicker && !I.timepicker
                                        ? (g.trigger(e, [e.deltaY, e.deltaX, e.deltaY]),
                                            w.val && w.val(W.str()),
                                            _.trigger("changedatetime.xdsoft"),
                                            !1)
                                        : void 0)
                            );
                        }),
                        _.on("changedatetime.xdsoft", function (e) {
                            if (I.onChangeDateTime && L.isFunction(I.onChangeDateTime)) {
                                var t = _.data("input");
                                I.onChangeDateTime.call(_, W.currentTime, t, e),
                                    delete I.value,
                                    t.trigger("change");
                            }
                        })
                            .on("generate.xdsoft", function () {
                                I.onGenerate &&
                                    L.isFunction(I.onGenerate) &&
                                    I.onGenerate.call(_, W.currentTime, _.data("input")),
                                    s && (_.trigger("afterOpen.xdsoft"), (s = !1));
                            })
                            .on("click.xdsoft", function (e) {
                                e.stopPropagation();
                            }),
                        (a = 0),
                        (h = function (e, t) {
                            do {
                                if (!(e = e.parentNode) || !1 === t(e)) break;
                            } while ("HTML" !== e.nodeName);
                        }),
                        (r = function () {
                            var e, t, a, o, r, n, i, s, d, u, l, f, c;
                            if (
                                ((e = (s = _.data("input")).offset()),
                                    (t = s[0]),
                                    (u = "top"),
                                    (a = e.top + t.offsetHeight - 1),
                                    (o = e.left),
                                    (r = "absolute"),
                                    (d = L(I.contentWindow).width()),
                                    (f = L(I.contentWindow).height()),
                                    (c = L(I.contentWindow).scrollTop()),
                                    I.ownerDocument.documentElement.clientWidth - e.left <
                                    g.parent().outerWidth(!0))
                            ) {
                                var m = g.parent().outerWidth(!0) - t.offsetWidth;
                                o -= m;
                            }
                            "rtl" === s.parent().css("direction") &&
                                (o -= _.outerWidth() - s.outerWidth()),
                                I.fixed
                                    ? ((a -= c),
                                        (o -= L(I.contentWindow).scrollLeft()),
                                        (r = "fixed"))
                                    : ((i = !1),
                                        h(t, function (e) {
                                            return (
                                                null !== e &&
                                                ("fixed" ===
                                                    I.contentWindow
                                                        .getComputedStyle(e)
                                                        .getPropertyValue("position")
                                                    ? !(i = !0)
                                                    : void 0)
                                            );
                                        }),
                                        i && !I.insideParent
                                            ? ((r = "fixed"),
                                                a + _.outerHeight() > f + c
                                                    ? ((u = "bottom"), (a = f + c - e.top))
                                                    : (a -= c))
                                            : a + _[0].offsetHeight > f + c &&
                                            (a = e.top - _[0].offsetHeight + 1),
                                        a < 0 && (a = 0),
                                        o + t.offsetWidth > d && (o = d - t.offsetWidth)),
                                (n = _[0]),
                                h(n, function (e) {
                                    if (
                                        "relative" ===
                                        I.contentWindow
                                            .getComputedStyle(e)
                                            .getPropertyValue("position") &&
                                        d >= e.offsetWidth
                                    )
                                        return (o -= (d - e.offsetWidth) / 2), !1;
                                }),
                                (l = {
                                    position: r,
                                    left: I.insideParent ? t.offsetLeft : o,
                                    top: "",
                                    bottom: "",
                                }),
                                I.insideParent
                                    ? (l[u] = t.offsetTop + t.offsetHeight)
                                    : (l[u] = a),
                                _.css(l);
                        }),
                        _.on("open.xdsoft", function (e) {
                            var t = !0;
                            I.onShow &&
                                L.isFunction(I.onShow) &&
                                (t = I.onShow.call(_, W.currentTime, _.data("input"), e)),
                                !1 !== t &&
                                (_.show(),
                                    r(),
                                    L(I.contentWindow)
                                        .off("resize.xdsoft", r)
                                        .on("resize.xdsoft", r),
                                    I.closeOnWithoutClick &&
                                    L([I.ownerDocument.body, I.contentWindow]).on(
                                        "touchstart mousedown.xdsoft",
                                        function e() {
                                            _.trigger("close.xdsoft"),
                                                L([I.ownerDocument.body, I.contentWindow]).off(
                                                    "touchstart mousedown.xdsoft",
                                                    e
                                                );
                                        }
                                    ));
                        })
                            .on("close.xdsoft", function (e) {
                                var t = !0;
                                F.find(".xdsoft_month,.xdsoft_year")
                                    .find(".xdsoft_select")
                                    .hide(),
                                    I.onClose &&
                                    L.isFunction(I.onClose) &&
                                    (t = I.onClose.call(_, W.currentTime, _.data("input"), e)),
                                    !1 === t || I.opened || I.inline || _.hide(),
                                    e.stopPropagation();
                            })
                            .on("toggle.xdsoft", function () {
                                _.is(":visible")
                                    ? _.trigger("close.xdsoft")
                                    : _.trigger("open.xdsoft");
                            })
                            .data("input", w),
                        (d = 0),
                        _.data("xdsoft_datetime", W),
                        _.setOptions(I),
                        W.setCurrentTime(f()),
                        w
                            .data("xdsoft_datetimepicker", _)
                            .on(
                                "open.xdsoft focusin.xdsoft mousedown.xdsoft touchstart",
                                function () {
                                    w.is(":disabled") ||
                                        (w.data("xdsoft_datetimepicker").is(":visible") &&
                                            I.closeOnInputClick) ||
                                        (I.openOnFocus &&
                                            (clearTimeout(d),
                                                (d = setTimeout(function () {
                                                    w.is(":disabled") ||
                                                        ((s = !0),
                                                            W.setCurrentTime(f(), !0),
                                                            I.mask && c(I),
                                                            _.trigger("open.xdsoft"));
                                                }, 100))));
                                }
                            )
                            .on("keydown.xdsoft", function (e) {
                                var t,
                                    a = e.which;
                                return -1 !== [D].indexOf(a) && I.enterLikeTab
                                    ? ((t = L(
                                        "input:visible,textarea:visible,button:visible,a:visible"
                                    )),
                                        _.trigger("close.xdsoft"),
                                        t.eq(t.index(this) + 1).focus(),
                                        !1)
                                    : -1 !== [T].indexOf(a)
                                        ? (_.trigger("close.xdsoft"), !0)
                                        : void 0;
                            })
                            .on("blur.xdsoft", function () {
                                _.trigger("close.xdsoft");
                            });
                }),
                (r = function (e) {
                    var t = e.data("xdsoft_datetimepicker");
                    t &&
                        (t.data("xdsoft_datetime", null),
                            t.remove(),
                            e.data("xdsoft_datetimepicker", null).off(".xdsoft"),
                            L(I.contentWindow).off("resize.xdsoft"),
                            L([I.contentWindow, I.ownerDocument.body]).off(
                                "mousedown.xdsoft touchstart"
                            ),
                            e.unmousewheel && e.unmousewheel());
                }),
                L(I.ownerDocument)
                    .off("keydown.xdsoftctrl keyup.xdsoftctrl")
                    .off("keydown.xdsoftcmd keyup.xdsoftcmd")
                    .on("keydown.xdsoftctrl", function (e) {
                        e.keyCode === p && (N = !0);
                    })
                    .on("keyup.xdsoftctrl", function (e) {
                        e.keyCode === p && (N = !1);
                    })
                    .on("keydown.xdsoftcmd", function (e) {
                        91 === e.keyCode && !0;
                    })
                    .on("keyup.xdsoftcmd", function (e) {
                        91 === e.keyCode && !1;
                    }),
                this.each(function () {
                    var t,
                        e = L(this).data("xdsoft_datetimepicker");
                    if (e) {
                        if ("string" === L.type(H))
                            switch (H) {
                                case "show":
                                    L(this).select().focus(), e.trigger("open.xdsoft");
                                    break;
                                case "hide":
                                    e.trigger("close.xdsoft");
                                    break;
                                case "toggle":
                                    e.trigger("toggle.xdsoft");
                                    break;
                                case "destroy":
                                    r(L(this));
                                    break;
                                case "reset":
                                    (this.value = this.defaultValue),
                                        (this.value &&
                                            e
                                                .data("xdsoft_datetime")
                                                .isValidDate(E.parseDate(this.value, I.format))) ||
                                        e.data("changed", !1),
                                        e.data("xdsoft_datetime").setCurrentTime(this.value);
                                    break;
                                case "validate":
                                    e.data("input").trigger("blur.xdsoft");
                                    break;
                                default:
                                    e[H] && L.isFunction(e[H]) && (n = e[H](a));
                            }
                        else e.setOptions(H);
                        return 0;
                    }
                    "string" !== L.type(H) &&
                        (!I.lazyInit || I.open || I.inline
                            ? o(L(this))
                            : (t = L(this)).on(
                                "open.xdsoft focusin.xdsoft mousedown.xdsoft touchstart",
                                function e() {
                                    t.is(":disabled") ||
                                        t.data("xdsoft_datetimepicker") ||
                                        (clearTimeout(i),
                                            (i = setTimeout(function () {
                                                t.data("xdsoft_datetimepicker") || o(t),
                                                    t
                                                        .off(
                                                            "open.xdsoft focusin.xdsoft mousedown.xdsoft touchstart",
                                                            e
                                                        )
                                                        .trigger("open.xdsoft");
                                            }, 100)));
                                }
                            ));
                }),
                n
            );
        }),
        (L.fn.datetimepicker.defaults = s);
};
!(function (e) {
    "function" == typeof define && define.amd
        ? define(["jquery", "jquery-mousewheel"], e)
        : "object" == typeof exports
            ? (module.exports = e(require("jquery")))
            : e(jQuery);
})(datetimepickerFactory);
